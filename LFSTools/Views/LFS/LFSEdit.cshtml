@using LFSTools.Models
@using DomainLayer.LFSTools
@model LFSTools.Models.LFSModels.LfsViewModel
@{
    ViewBag.Title = "LFSEdit";
}
<h2>
    LFSEdit</h2>
<div id="editmodal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
    aria-hidden="true">
    <div class="modal-header">
        <h2 id="myModalLabel">
            Edit</h2>
    </div>
    <div class="modal-body" id='modalMessage'>
        <textarea id="lfsModalMessage" class="lfsTextEdit" rows="5"></textarea>
    </div>
    <div class="modal-footer">
        <button id="saveEdit" class="LfsButton" data-dismiss="modal" onclick="saveEdit();">
            Save</button>
        <button id="activateLfs" class="LfsButton lfsActivate">
            Activate</button>
        <button id="activateLfs" class="LfsButton LfsCancel" data-dismiss="modal">
            Cancel</button>
    </div>
</div>
@Html.DropDownListFor(x => x.GuideTypes.SelectedItemId, new SelectList(Model.GuideTypes.SelectList, "CategoryId", "ShortTitle"), "Select a type", new { id = "guideType" })
<div>
    <select id="areaOfConcern" class="lfsSelectList">
        <option value="" disabled selected="selected">Aarea Of concern...</option>
    </select>
    <input type="button" value="Edit" class="LfsButton LfsEdit" onclick="ShowModal('editmodal',document.getElementById('areaOfConcern'));" /><input
        type="button" value="Add+" class="LfsButton" onclick="ShowCreateNewModal('editmodal',document.getElementById('areaOfConcern'));" />
    <select id="subAreaOfConcern" class="lfsSelectList">
        <option value="" disabled selected="selected">Sub Aarea Of Concern...</option>
    </select>
    <input type="button" value="Edit" class="LfsButton LfsEdit" onclick="ShowModal('editmodal',document.getElementById('subAreaOfConcern'));" /><input
        type="button" value="Add+" class="LfsButton" onclick="ShowCreateNewModal('editmodal',document.getElementById('subAreaOfConcern'));"/>
    <select id="target" class="lfsSelectList">
        <option value="" disabled selected="selected">SMARTS Target...</option>
    </select>
    <input type="button" value="Edit" class="LfsButton LfsEdit" onclick="ShowModal('editmodal',document.getElementById('target'));" /><input
        type="button" value="Add+" class="LfsButton" onclick="ShowCreateNewModal('editmodal',document.getElementById('target'));"/>
    <select id="rootCause" class="lfsSelectList">
        <option value="" disabled selected="selected">Root Cause...</option>
    </select>
    <input type="button" value="Edit" class="LfsButton LfsEdit" onclick="ShowModal('editmodal',document.getElementById('rootCause'));" /><input
        type="button" value="Add+" class="LfsButton" onclick="ShowCreateNewModal('editmodal',document.getElementById('rootCause'));"/>
    <select id="impFocus" class="lfsSelectList">
        <option value="" disabled selected="selected">Implementation Focus...</option>
    </select>
    <input type="button" value="Edit" class="LfsButton LfsEdit" onclick="ShowModal('editmodal',document.getElementById('impFocus'));" /><input
        type="button" value="Add+" class="LfsButton" onclick="ShowCreateNewModal('editmodal',document.getElementById('impFocus'));"/>
    <select id="action" class="lfsSelectList">
        <option value="" disabled selected="selected">Action(s)...</option>
    </select>
    <input type="button" value="Edit" class="LfsButton LfsEdit" onclick="ShowModal('editmodal',document.getElementById('action'));" /><input
        type="button" value="Add+" class="LfsButton" onclick="ShowCreateNewModal('editmodal',document.getElementById('action'));"/>
</div>
<style>
    .false {
        background: #f08080;
    }
    .true {
       
    }
    #guideType
    {
        font-size: 2em;
    }
    .lfsSelectList
    {
        width: 65%;
        font-size: 1.5em;
        padding: .1em;
        margin-top: .5em;
        border-width: 2px;
    }
</style>
<script type="text/javascript">
    var selectedObject;
    var selectedId;
    var selected = new selectedObject;
    var gList;
    var areaList;
    var subAreaList;
    var targetList;
    var rootList;
    var focusList;
    var actionList;
    $(function () {
        gList = document.getElementById('guideType');
        areaList = document.getElementById("areaOfConcern");
        subAreaList = document.getElementById("subAreaOfConcern");
        targetList = document.getElementById("target");
        rootList = document.getElementById("rootCause");
        focusList = document.getElementById("impFocus");
        actionList = document.getElementById("action");
        gList.onchange = function (e) {
            loadList(gList, areaList, 0);
            };
        areaList.onchange = function (e) {
            areaList.style.borderColor = borderColor(areaList.options[areaList.selectedIndex].className);
            loadList(areaList, subAreaList, 1);
        };
        subAreaList.onchange = function (e) {
            subAreaList.style.borderColor = borderColor(subAreaList.options[subAreaList.selectedIndex].className);
            loadList(subAreaList, targetList, 2);
        };
        targetList.onchange = function (e) {
            targetList.style.borderColor = borderColor(targetList.options[targetList.selectedIndex].className);
            loadList(targetList, rootList,3);
        };
        rootList.onchange = function (e) {
            rootList.style.borderColor = borderColor(rootList.options[rootList.selectedIndex].className);
            loadList(rootList, focusList, 4);
        };
        focusList.onchange = function (e) {
            focusList.style.borderColor = borderColor(focusList.options[focusList.selectedIndex].className);
            loadList(focusList, actionList,5);
        };
        actionList.onchange = function (e) {
            actionList.style.borderColor = borderColor(actionList.options[actionList.selectedIndex].className);
        };
    });

    function borderColor(isTrue) {
        var retVal = 'red';
        if (isTrue === 'true') {
            retVal = 'green';
        }
        return retVal;
    }

    function createListItem(dataObject) {
        var desc = document.createElement('span');
        desc.textContent = dataObject.Description;
        return desc.innerHTML;
    }

    function saveEdit() {
        var newText = document.getElementById('lfsModalMessage').value;
        var g = guid();
        var input = { type: selected.getCollection()[0].ObjectType, Id: selected.getCollection()[0].ItemId, text: newText,active:selected.getCollection()[0].Active,guid:g };
        $.ajax(
                {
                    url: '/LFS/SaveEdit/',
                    type: "GET",
                    data: input,
                    dataType: 'json',
                    success: function (data) {
                        if (Boolean(data.Success)) {
                            switch (selected.getCollection()[0].ObjectType) {
                                case "areaOfConcern":
                                    loadList(gList, areaList, 0);
                                    break;
                                case "subAreaOfConcern":
                                    loadList(areaList, subAreaList, 1);
                                    break;
                                case "target":
                                    loadList(subAreaList, targetList, 2);
                                    break;
                                case "rootCause":
                                    loadList(targetList, rootList, 3);
                                    break;
                                case "impFocus":
                                    loadList(rootList, loadList, 4);
                                    break;
                                case "action":
                                    loadList(loadList, actionList, 5);
                                    break;
                                    sendSystemMessage(messageContent(0));
                            }
                        }
                        else {
                            ajaxRequestFail(data);
                        }
                        
                       
                    },
                    error: function () {
                        sendSystemMessage(messageContent(2));
                    }
                });
            }
            function createNew() {
                var newText = document.getElementById('lfsModalMessage').value;
                var g = guid();
                var input = { type: selected.getCollection()[0].ObjectType, Id: selected.getCollection()[0].ItemId, text: newText, active: selected.getCollection()[0].Active, guid: g };
                $.ajax(
                {
                    url: '/LFS/CreateNew/',
                    type: "GET",
                    data: input,
                    dataType: 'json',
                    success: function (data) {
                        if (Boolean(data.Success)) {
                            switch (selected.getCollection()[0].ObjectType) {
                                case "areaOfConcern":
                                    loadList(gList, areaList, 0);
                                    break;
                                case "subAreaOfConcern":
                                    loadList(areaList, subAreaList, 1);
                                    break;
                                case "target":
                                    loadList(subAreaList, targetList, 2);
                                    break;
                                case "rootCause":
                                    loadList(targetList, rootList, 3);
                                    break;
                                case "impFocus":
                                    loadList(rootList, focusList, 4);
                                    break;
                                case "action":
                                    loadList(focusList, actionList, 5);
                                    break;
                            }
                            sendSystemMessage(messageContent(1));
                        }
                        else {
                            ajaxRequestFail(data);
                        }
                        
                    },
                    error: function () {
                        sendSystemMessage(messageContent(2));
                    }
                });
            }
    function resetLists(order) {
        switch (order) {
            case 0:
                areaList.removeSelectOptionsExceptFirst();
                subAreaList.removeSelectOptionsExceptFirst();
                targetList.removeSelectOptionsExceptFirst();
                rootList.removeSelectOptionsExceptFirst();
                focusList.removeSelectOptionsExceptFirst();
                actionList.removeSelectOptionsExceptFirst();
                break;
            case 1:
                subAreaList.removeSelectOptionsExceptFirst();
                targetList.removeSelectOptionsExceptFirst();
                rootList.removeSelectOptionsExceptFirst();
                focusList.removeSelectOptionsExceptFirst();
                actionList.removeSelectOptionsExceptFirst();

                break;
            case 2:
                targetList.removeSelectOptionsExceptFirst();
                rootList.removeSelectOptionsExceptFirst();
                focusList.removeSelectOptionsExceptFirst();
                actionList.removeSelectOptionsExceptFirst();
                break;
            case 3:
                rootList.removeSelectOptionsExceptFirst();
                focusList.removeSelectOptionsExceptFirst();
                actionList.removeSelectOptionsExceptFirst();
                break;
            case 4:
                focusList.removeSelectOptionsExceptFirst();
                actionList.removeSelectOptionsExceptFirst();
                break;
            case 5:
                actionList.removeSelectOptionsExceptFirst();
                break;
            case 6:
                break;

        }
    }
    function loadList(type,child,order) {
        var g = guid();
        var input = { type: type.id, Id: type.value, guid:g };
        $.ajax(
                {
                    url: '/LFS/GetDrillDownData/',
                    type: "GET",
                    data: input,
                    dataType: 'json',
                    success: function (data) {
                        if (Boolean(data.Success)) {
                            child.removeSelectOptionsExceptFirst();
                            resetLists(order);
                            for (var i = 0; i < data.SelectList.SelectList.length; i++) {
                                var option = document.createElement('option');
                                option.className = data.SelectList.SelectList[i].Active.toString();
                                option.value = data.SelectList.SelectList[i].Id;
                                option.innerText = data.SelectList.SelectList[i].Description; //createListItem(data.SelectList.SelectList[i]);
                                child.appendChild(option);
                            }
                            child.value = parseInt(type.value);
                            child.name = parseInt(type.value);
                            child.selectedIndex = 0;
                            child.options[0].defaultSelected = true;
                        }
                        else {
                            ajaxRequestFail(data);
                        }
                        
                    },
                    error: function (x) {
                        sendSystemMessage(messageContent(2));
                    }
                });
            }

            function ShowModal(id, elem) {

                if (elem.selectedIndex > 0) {
                    document.getElementById('saveEdit').onclick = function () {
                        saveEdit();
                    };
                    var active = true;
                    var activeButton = document.getElementById("activateLfs");
                    activeButton.style.display = 'inline';
                    if (elem.options[elem.selectedIndex].className === "false") {
                        active = false;
                        activeButton.innerText = "Activate";
                        activeButton.onclick = function () {
                            activateButton(activeButton);
                        };

                    } else {

                        active = true;
                        activeButton.innerText = "Deactivate";
                        activeButton.onclick = function () {
                            deactivateButton(activeButton);
                        };

                    }

                    selected.setItems(elem.options[elem.selectedIndex].value, elem.options[elem.selectedIndex].text, elem.id, 1, active);
                    window.selectedObject = elem;
                    document.getElementById('lfsModalMessage').value = elem.options[elem.selectedIndex].text;
                    $("#" + id).modal();
                }
            }
            function ShowCreateNewModal(id, elem) {
                document.getElementById('saveEdit').onclick = function () {
                    createNew();
                };
                var activeButton = document.getElementById("activateLfs");
                activeButton.style.display = 'none';
                selected.setItems(elem.name, "", elem.id, 1, false);
                window.selectedObject = elem;
                document.getElementById('lfsModalMessage').value = "";
                $("#" + id).modal();
                
            }

            function activateButton(elemBtn) {
                elemBtn.innerText = "Deactivate";
                selected.setActive(true);
                elemBtn.onclick = function () {
                    deactivateButton(elemBtn);
                };

            }
            function deactivateButton(elemBtnb) {
                elemBtnb.innerText = "Activate";
                selected.setActive(false);
                elemBtnb.onclick = function () {
                    activateButton(elemBtnb);
                };

            }
</script>
